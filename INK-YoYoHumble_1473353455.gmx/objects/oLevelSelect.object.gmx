<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLevelSelect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oParText</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

surf = surface_create(sprite_width, sprite_height);

// Clear surface
surface_set_target(surf);
draw_clear_alpha(0, 0);
// Draw sprite
draw_sprite(sprite_index, -1, 0, 0);
surface_reset_target();

num = 12;

init     = false;
count    = num;

// Buffer for surface(s)
buf = -1;

initdraw = false;

numCoinsCollected = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursorAng = random(360);
cursorDir = 1;
xscale    = 2;
yscale    = xscale;

canMove = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Count num Coins

ini_open("DontModifyThis.ini");

for (var i = 0; i &lt; 75; i++) {
    if (ini_read_real("NormalLevels", string(i), false) == 2)
       ++numCoinsCollected;
}

ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (count &gt;= 0) {
    var xx, yy;

    for (var i = 0; i &lt; 32; i++)    
        instance_create(random_range(200 + (num - count) * (200 / num), 180 + (num - count + 1) * (260 / num)), random_range(20, 60) + 20, oPaint);

    count--;
    
    with (oGame)
        color += 1;
} else {
    if (!init) {
        // Garbage
        init = true;
    }
}

cursorAng += 12 * cursorDir;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to level

var kAction = keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0, gp_face1) || keyboard_check_pressed(vk_enter);
var kBack   = gamepad_button_check_pressed(0, gp_face2) || keyboard_check_pressed(vk_escape);

if (kAction) {
    audio_play_sound(sfxSelect, 0, 0);
    canMove = false;
    
    if (!instance_exists(oFxRoomGoTo)) {
        var rm = 0;
        
        with (oLevelSelectPanel)
            rm = (clamp(target / 120, 0, oGame.maxLevel));
            
        with (instance_create(x, y, oFxRoomGoTo)) 
            target = room + rm + 1;
    }
}

if (kBack) {
    audio_play_sound(sfxSelect, 0, 0);

    if (!instance_exists(oFxRoomGoTo)) {
        with (instance_create(x, y, oFxRoomGoTo)) 
            target = rmTitle;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();

// Initial clear
if (!initdraw) {
    surface_set_target(surf);
    draw_clear_alpha(0, 0);
    draw_sprite(sprite_index, -1, 0, 0);    
    surface_reset_target();
    
    initdraw = true;
}

// Surface drawing
if (surface_exists(surf)) {
    draw_surface(surf, x, y);
} else {
    if (buf != -1) {
        surf = surface_create(sprite_width, sprite_height);
        
        surface_set_target(surf);
        draw_clear_alpha(0, 0);  
        surface_reset_target();        
        
        // Copy buffer to surface
        buffer_set_surface(buf, surf, 0, 0, 0);
        
        draw_surface(surf, x, y);        
    }
}

// Draw cursor
//if (init &amp;&amp; !instance_exists(oPaint) &amp;&amp; !instance_exists(oPaintBullet))
    draw_sprite_ext(sCursor, -1, 320, 220, xscale, yscale, cursorAng, c_white, 1);
    

// Coin Counter
var numCoinsString =  string(numCoinsCollected) + "/20";
draw_set_colour(c_white);
draw_text(580, 22, numCoinsString);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
