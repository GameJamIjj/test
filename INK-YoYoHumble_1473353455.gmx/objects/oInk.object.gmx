<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sInk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>oParText</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

surf = surface_create(sprite_width, sprite_height);

// Clear surface
surface_set_target(surf);
draw_clear_alpha(0, 0);
// Draw sprite
draw_sprite(sprite_index, -1, 0, 0);
surface_reset_target();

init     = false;
count    = 4;

// Buffer for surface(s)
buf = -1;

initdraw = false;

// Blah, I'm tired of coding
init1 = false;
init2 = false;
init3 = false;
stop1 = false;
stop2 = false;
stop3 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init1 &amp;&amp; init2 &amp;&amp; !init3) {
    if (count &gt;= 0) {
        // Screenshake?
        if (count == 4)
            with (oGame) {
                //audio_play_sound(sfxLetterStamp, 0, 0);
                shake    = true;
                alarm[0] = 4;
            }
        
        for (var i = 0; i &lt; 48; i++)    
            instance_create(random_range(380 + (4 - count) * (60 / 4), 380 + (4 - count + 1) * (60 / 4)), random_range(y + 29, y + 124), oPaint);
    
        count--;
        
        with (oGame)
            color += 1;    
    }  else if (count &gt;= -8) {
        count--;
    } else {
        init3 = true;
        count = 4;
    }
} 

if (init1 &amp;&amp; !init2) {
    if (count &gt;= 0) {
        // Screenshake?
        if (count == 4)
            with (oGame) {
                //audio_play_sound(sfxLetterStamp, 0, 0);            
                shake    = true;
                alarm[0] = 4;
            }
        
        for (var i = 0; i &lt; 48; i++)    
            instance_create(random_range(280 + (4 - count) * (60 / 4), 280 + (4 - count + 1) * (60 / 4)), random_range(y + 29, y + 124), oPaint);
    
        count--;
        
        with (oGame)
            color += 1;    
    }  else if (count &gt;= -8) {
        count--;
    }else {
        init2 = true;
        count = 4;
    }
} 

if (!init1) {
    if (count &gt;= 0) {
        // Screenshake?
        if (count == 4)
            with (oGame) {
                audio_play_sound(sfxLetterStamp, 0, 0);
                shake    = true;
                alarm[0] = 4;
            }
        
        for (var i = 0; i &lt; 48; i++)    
            instance_create(random_range(180 + (4 - count) * (60 / 4), 180 + (4 - count + 1) * (60 / 4)), random_range(y + 29, y + 124), oPaint);
    
        count--;
        
        with (oGame)
            color += 1;    
    } else if (count &gt;= -8) {
        count--;
    } else {
        init1 = true;
        count = 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();

// Initial clear
if (!initdraw) {
    surface_set_target(surf);
    draw_clear_alpha(0, 0);
    draw_sprite(sprite_index, -1, 0, 0);    
    surface_reset_target();
    
    initdraw = true;
}

// Surface drawing
if (surface_exists(surf)) {
    draw_surface(surf, x, y);
} else {
    if (buf != -1) {
        surf = surface_create(sprite_width, sprite_height);
        
        surface_set_target(surf);
        draw_clear_alpha(0, 0);  
        surface_reset_target();        
        
        // Copy buffer to surface
        buffer_set_surface(buf, surf, 0, 0, 0);
        
        draw_surface(surf, x, y);        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
