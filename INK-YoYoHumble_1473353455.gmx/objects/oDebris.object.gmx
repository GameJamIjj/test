<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sDebris</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = surface_create(sprite_width * 2, sprite_height * 2);

// Clear surface
surface_set_target(surf);
draw_clear_alpha(0, 0);
surface_reset_target();

init = false;

c     = random(255);
color = make_color_hsv(c, 255, 255);

canMove  = false;
alarm[0] = random_range(5, 50);

image_xscale = random_range(0.66, 1.66);
image_yscale = image_xscale;
image_angle  = random(360);

vy = 0;

if (instance_number(oDebris) &gt; 5)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
    
audio_play_sound(choose(sfxB1_Debris0, sfxB1_Debris1), 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y += vy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Change color
c += random_range(2, 8);

if (canMove)
    vy = Approach(vy, 16, 0.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i &lt; 8; i++)
    instance_create(x + random_range(-4, 4), y + random_range(-4, 4), oPaintBullet);
    
with (oGame) {
    shake = true;
    alarm[0] = 4;
}

with (oFxGrid)
    FxGridExplode(grid, other.x, other.y, 16, 16);
    
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other)
    instance_destroy();

for (var i = 0; i &lt; 8; i++)
    instance_create(x + random_range(-4, 4), y + random_range(-4, 4), oPaintBullet);
    
with (oGame) {
    shake = true;
    alarm[0] = 4;
}

with (oFxGrid)
    FxGridExplode(grid, other.x, other.y, 16, 16);
        
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//toggle = !toggle;

if (!init) {
    surface_set_target(surf);
    draw_clear_alpha(0, 0);
    surface_reset_target();
        
    init = true;
}

//if (toggle || canGetHurt) {
    if (surface_exists(surf)) {
        surface_set_target(surf);
        draw_clear_alpha(0, 0);

        draw_sprite_ext(sprite_index, image_index, 16, 16, image_xscale, image_yscale, image_angle, c_white, 1);
        
        draw_set_blend_mode_ext(7, 6);
    
        var c1, c2, c3, c4;
        
        c1 = color;
        
        if (c + (255 * 0.25) &gt; 255)
            c2 = make_color_hsv(c + (255 * 0.25) - 255, 255, 255);
        else
            c2 = make_color_hsv(c + (255 * 0.25), 255, 255);
        
        if (c + (255 * 0.5) &gt; 255)
            c3 = make_color_hsv(c + (255 * 0.5) - 255, 255, 255);
        else
            c3 = make_color_hsv(c + (255 * 0.5), 255, 255);
            
        if (c + (255 * 0.75) &gt; 255)
            c4 = make_color_hsv(c + (255 * 0.75) - 255, 255, 255);
        else
            c4 = make_color_hsv(c + (255 * 0.75), 255, 255);
          
        //draw_set_alpha(1 - (!canGetHurt * 0.33));      
        draw_rectangle_colour(0, 0, 32, 32, c1, c4, c3, c2, false);
        
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
                
        draw_surface(surf, x - 16, y - 16);            
    } else {
        surf = surface_create(sprite_width * 2, sprite_height * 2);
        
        surface_set_target(surf);
        draw_clear_alpha(0, 0);

        draw_sprite_ext(sprite_index, image_index, 16, 16, image_xscale, image_yscale, image_angle, c_white, 1);
        
        draw_set_blend_mode_ext(7, 6);
    
        var c1, c2, c3, c4;
        
        c1 = color;
        
        if (c + (255 * 0.25) &gt; 255)
            c2 = make_color_hsv(c + (255 * 0.25) - 255, 255, 255);
        else
            c2 = make_color_hsv(c + (255 * 0.25), 255, 255);
        
        if (c + (255 * 0.5) &gt; 255)
            c3 = make_color_hsv(c + (255 * 0.5) - 255, 255, 255);
        else
            c3 = make_color_hsv(c + (255 * 0.5), 255, 255);
            
        if (c + (255 * 0.75) &gt; 255)
            c4 = make_color_hsv(c + (255 * 0.75) - 255, 255, 255);
        else
            c4 = make_color_hsv(c + (255 * 0.75), 255, 255);
          
        //draw_set_alpha(1 - (!canGetHurt * 0.33));      
        draw_rectangle_colour(0, 0, 32, 32, c1, c4, c3, c2, false);
        
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
                
        draw_surface(surf, x - 16, y - 16); 
    }
//}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
