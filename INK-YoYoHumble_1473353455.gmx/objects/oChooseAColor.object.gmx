<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sChooseAColor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oParText</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

surf = surface_create(sprite_width, sprite_height);

// Clear surface
surface_set_target(surf);
draw_clear_alpha(0, 0);
// Draw sprite
draw_sprite(sprite_index, -1, 0, 0);
surface_reset_target();

num = 12;

init     = false;
count    = num;

// Buffer for surface(s)
buf = -1;

initdraw = false;

blink    = false;
alarm[0] = 15;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//cursorAng = random(360);
//cursorDir = 1;
//xscale    = 2;
//yscale    = xscale;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blink = !blink;

alarm[0] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (count &gt;= 0) {
    var xx, yy;

    for (var i = 0; i &lt; 32; i++)    
        instance_create(random_range(176 + (num - count) * (176 / num), 176 + (num - count + 1) * (288 / num)), 32 + random_range(-12, 12), oPaint);

    count--;
    
    with (oGame)
        color += 1;
} else {
    if (!init) {
        init = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to level

//var kAction = keyboard_check_pressed(ord('A')) || gamepad_button_check_pressed(0, gp_face1) || gamepad_button_check_pressed(0, gp_start);
//var kBack   = keyboard_check_pressed(ord('S')) || gamepad_button_check_pressed(0, gp_face2);

for (var curr = 0; curr &lt; 4; curr++) {
    if (oGame.slot[curr] == -1) {
        // Choose Player 1 Slot
        if (keyboard_check_pressed(ord('A'))) {
            var flag = false;
            
            for (var j = 0; j &lt; 4; j++)
                if (oGame.slot[j] == 4) {
                    flag = true;
                    break;
                }
                
            if (!flag)
                oGame.slot[curr] = 4; // Keyboard
        } else {
            // Step through controllers
            for (var i = 0; i &lt; 4; i++) {
                var flag = false;
                
                // If controller button, check if it's available
                if (gamepad_button_check_pressed(i, gp_face1) || gamepad_button_check_pressed(i, gp_start)) {
                    // Check if slot is using controller
                    for (var j = 0; j &lt; 4; j++)
                        if (oGame.slot[j] == i) {
                            flag = true;
                            break;
                        }
                }
                        
                // Controller select
                if ((gamepad_button_check_pressed(i, gp_face1) || gamepad_button_check_pressed(i, gp_start)) &amp;&amp; !flag) {
                    oGame.slot[curr] = i;
                    break;
                }
            }
        }
        
        // Slot was filled
        if (oGame.slot[curr] != -1) {
            switch (curr) {
                case 0:
                    instance_create(80, 144, oMP1);
                break;
                
                case 1:
                    instance_create(240, 144, oMP2);
                break;
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();

// Initial clear
if (!initdraw) {
    surface_set_target(surf);
    draw_clear_alpha(0, 0);
    draw_sprite(sprite_index, -1, 0, 0);    
    surface_reset_target();
    
    initdraw = true;
}

// Surface drawing
if (surface_exists(surf)) {
    draw_surface(surf, x, y);
} else {
    if (buf != -1) {
        surf = surface_create(sprite_width, sprite_height);
        
        surface_set_target(surf);
        draw_clear_alpha(0, 0);  
        surface_reset_target();        
        
        // Copy buffer to surface
        buffer_set_surface(buf, surf, 0, 0, 0);
        
        draw_surface(surf, x, y);        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Press START thing

for (var i = 0; i &lt; 4; i++) {
    if (oGame.slot[i] == -1)
        if (blink)
            draw_sprite(sPressStart, -1, 80 + (160 * i), 210);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
