<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBall</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = surface_create(sprite_width, sprite_height);

// Clear surface
surface_set_target(surf);
draw_clear_alpha(0, 0);
surface_reset_target();

init = false;

c     = random(255);
color = make_color_hsv(c, 255, 255);

vspeed = -0.5;

dir       = 0;
dirdiff   = 0;
intensity = 0;

// Freeze bug
touched = false;

audio_play_sound(sfxFancyFinish, 0, 0);

audio_sound_gain(tBoss1, 0, 4000);
audio_sound_gain(tBoss2, 0, 4000);
audio_sound_gain(tBoss3, 0, 4000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (oPlayer) {
    freeze     = false;
    touchPaint = true;
}
    
for (i = 0; i &lt; 64; i++)
    instance_create(x, y, oPaintBullet);
    
if (choose(1, 0))
    audio_play_sound(choose(sfxSplat0, sfxSplat1, sfxSplat2, sfxSplat3, sfxSplat4), 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!touched) {
    if (y &lt; ystart - 8)
        vspeed = 0.5;
    else if (y &gt; ystart + 8)
        vspeed = -0.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Change color
c += random_range(2, 8);

if (random(100) &gt; 90)
    instance_create(x + random_range(-2, 2), y + random_range(-1, 1), oPaintBulletDrip);

//with (oFxGrid)
//    FxGridExplode(grid, other.x + random_range(-8, 8), other.y + random_range(-8, 8), 16, 50);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!touched) {
    with (other) {
        freeze = true;
    }
    
    speed   = 0;
    touched = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var c1, c2, c3, c4;

c1 = color;

if (c + (255 * 0.25) &gt; 255)
    c2 = make_color_hsv(c + (255 * 0.25) - 255, 255, 255);
else
    c2 = make_color_hsv(c + (255 * 0.25), 255, 255);

if (c + (255 * 0.5) &gt; 255)
    c3 = make_color_hsv(c + (255 * 0.5) - 255, 255, 255);
else
    c3 = make_color_hsv(c + (255 * 0.5), 255, 255);
    
if (c + (255 * 0.75) &gt; 255)
    c4 = make_color_hsv(c + (255 * 0.75) - 255, 255, 255);
else
    c4 = make_color_hsv(c + (255 * 0.75), 255, 255);
        
if (speed == 0 || touched) {
    // Shake
    with (oGame) {
        shake = true;
        alarm[0] = 8;
    }
    
    draw_set_color(c1);
    draw_triangle(x, y, x + lengthdir_x(640, dir - dirdiff), y + lengthdir_y(640, dir - dirdiff), x + lengthdir_x(640, dir + dirdiff), y + lengthdir_y(640, dir + dirdiff), false);
    
    draw_set_color(c2);
    draw_triangle(x, y, x + lengthdir_x(640, dir - dirdiff + 90), y + lengthdir_y(640, dir - dirdiff + 90), x + lengthdir_x(640, dir + dirdiff + 90), y + lengthdir_y(640, dir + dirdiff + 90), false);
    
    draw_set_color(c3);
    draw_triangle(x, y, x + lengthdir_x(640, dir - dirdiff + 180), y + lengthdir_y(640, dir - dirdiff + 180), x + lengthdir_x(640, dir + dirdiff + 180), y + lengthdir_y(640, dir + dirdiff + 180), false);
    
    draw_set_color(c4);
    draw_triangle(x, y, x + lengthdir_x(640, dir - dirdiff + 270), y + lengthdir_y(640, dir - dirdiff + 270), x + lengthdir_x(640, dir + dirdiff + 270), y + lengthdir_y(640, dir + dirdiff + 270), false);
    
    draw_set_color(c_white);
    
    // Warp
    with (oFxGrid) {
        FxGridExplode(grid, random(room_width), random(room_height), 50, other.intensity);
    }
    
    // Paint
    for (var i = 0; i &lt; 16; i++)
        instance_create(x, y, oPaintBullet);
    
    dir       += 10;
    intensity  = Approach(intensity, 150, 5);
    dirdiff    = Approach(dirdiff, 45, 0.5);
    
    if (dirdiff == 45 &amp;&amp; !init) {
        alarm[0] = 30;
        init     = true;
    }
}

/*
// Draw orb
if (surface_exists(surf)) {
    surface_set_target(surf);
    draw_clear_alpha(0, 0);
    
    draw_sprite_ext(sprite_index, image_index, 7, 7, 1, 1, 0, c_white, 1);
    
    draw_set_blend_mode_ext(7, 6);
        
    draw_rectangle_colour(0, 0, sprite_width, sprite_height, c1, c4, c3, c2, false);
    draw_set_blend_mode(bm_normal);
    
    surface_reset_target();
            
    draw_surface(surf, x -7, y - 7);        
} else {
    surf = surface_create(sprite_width, sprite_height);
    draw_surface(surf, x, y);
    
    surface_set_target(surf);
    draw_clear_alpha(0, 0);
    
    draw_sprite_ext(sprite_index, image_index, 7, 7, 1, 1, 0, c_white, 1);
    
    draw_set_blend_mode_ext(7, 6);

    var c1, c2, c3, c4;
    
    c1 = color;
    
    if (c + (255 * 0.25) &gt; 255)
        c2 = make_color_hsv(c + (255 * 0.25) - 255, 255, 255);
    else
        c2 = make_color_hsv(c + (255 * 0.25), 255, 255);
    
    if (c + (255 * 0.5) &gt; 255)
        c3 = make_color_hsv(c + (255 * 0.5) - 255, 255, 255);
    else
        c3 = make_color_hsv(c + (255 * 0.5), 255, 255);
        
    if (c + (255 * 0.75) &gt; 255)
        c4 = make_color_hsv(c + (255 * 0.75) - 255, 255, 255);
    else
        c4 = make_color_hsv(c + (255 * 0.75), 255, 255);
        
    draw_rectangle_colour(0, 0, sprite_width * 2, sprite_height * 2, c1, c4, c3, c2, false);
    draw_set_blend_mode(bm_normal);
    
    surface_reset_target();
            
    draw_surface(surf, x - 7, y - 7);  
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
